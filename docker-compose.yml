services:
  app:
    build:
      context: .
      dockerfile: ./app/Dockerfile
    container_name: laravel_app
    working_dir: /var/www
    volumes:
      - ../src:/var/www:cached
      - shared_storage:/var/www/storage
    networks:
      - app-network

  onlyofficeapp:
    build:
      context: .
      dockerfile: ./app/Dockerfile
    container_name: onlyofficeapp
    working_dir: /var/www
    volumes:
      - ../onlyofficeApp:/var/www:cached
      - shared_storage:/var/www/storage
    networks:
      - app-network
    depends_on:
      - app

  webserverApp:
    image: nginx:latest
    container_name: webserverApp
    ports:
      - "8080:80"
      - "443:443"
    volumes:
      - ../src:/var/www:cached
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./certs:/etc/nginx/certs
      - shared_storage:/var/www/storage
    depends_on:
      - app
      - onlyofficeapp
    networks:
      - app-network

  webserverOnlyofficeApp:
    image: nginx:latest
    container_name: webserverOnlyofficeApp
    ports:
      - "8085:80"  # Добавляем второй порт для второго проекта
    volumes:
      - ../onlyofficeApp:/var/www:cached # Монтируем второй проект в другую директорию
      - ./nginx/onlyofficeApp/default.conf:/etc/nginx/conf.d/default.conf # Добавляем конфигурацию для второго проекта
      - ./certs:/etc/nginx/certs
      - shared_storage:/var/www/storage
    depends_on:
      - app
      - onlyofficeapp
    networks:
      - app-network

  #  webserver:
  #    image: nginx:latest
  #    container_name: nginx
  #    ports:
  #      - "8080:80"
  #      - "443:443"
  #    volumes:
  #      - ../src:/var/www:cached
  #      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
  #      - ./certs:/etc/nginx/certs
  #    depends_on:
  #      - app
  #    networks:
  #      - app-network

  db:
    image: postgres:latest
    container_name: postgres
    environment:
      POSTGRES_DB: laravel
      POSTGRES_USER: laravel
      POSTGRES_PASSWORD: secret
      POSTGRES_MULTIPLE_DATABASES: laravel,another_database  # Добавляем вторую базу данных
    volumes:
      - dbdata:/var/lib/postgresql/data
    networks:
      - app-network
    ports:
      - "5432:5432"

  onlyoffice:
    image: onlyoffice/documentserver
    ports:
      - "8081:80"  # Map port 80 in the container to port 8000 on the host
    networks:
      - app-network
    environment:
      JWT_SECRET: lMIfznRjKIwP2agEIx7cGcMuNuRljn

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  dbdata:
  shared_storage: